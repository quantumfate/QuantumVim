name: install

on:
  pull_request:
    branches:
      - "main"
    paths:
      - ".github/workflows/**"
      - "lua/**"
      - "snapshots/**"
      - "utils/**"

jobs:
  unixish:
    name: ${{ matrix.os }} ${{ matrix.runner }} (${{ matrix.neovim }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ubuntu-latest
            os: linux
          - runner: macos-latest
            os: osx
          - runner: ubuntu-22.04
            os: linux
            neovim: nightly
          - runner: macos-12
            os: osx
            neovim: nightly
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v3

      - name: Install neovim binary from release
        env:
          RELEASE_VER: ${{ matrix.neovim }}
        run: |
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          bash ./utils/installer/install-neovim-from-release.sh

      - name: Install QuantumVim
        timeout-minutes: 4
        env:
          QV_BRANCH: ${{ github.head_ref || github.ref_name }}
          QV_REMOTE: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          QUANTUMVIM_LOG_LEVEL: "debug"
          QV_FIRST_TIME_SETUP: 1
        run: |
          export PATH="$HOME/.local/bin:$PATH"

          installer_url="https://raw.githubusercontent.com/${QV_REMOTE}/${QV_BRANCH}/utils/installer/install.sh"
          curl -LSsO "$installer_url"
          bash ./install.sh --no-install-dependencies

      - name: Test QuantumVim startup
        env:
          QUANTUMVIM_DIR: "$HOME/.config/qvim"
          QUANTUMVIM_CACHE_DIR: "$HOME/.cache/qvim"
          QV_IN_GIT_WORKFLOW: 1
        run: |
          qvim -c 'q'
      - name: Run unit-tests
        # NOTE: make sure to adjust the timeout if you start adding a lot of tests
        timeout-minutes: 4
        run: |
          nvim --version
          make test

#   windows:
#     name: "windows-latest"
#     runs-on: windows-latest
#     if: github.event.pull_request.draft == false
#     continue-on-error: true # windows support is still experimental
#     defaults:
#       run:
#         shell: pwsh
#     steps:
#       # it's not currently possbile to run tests on windows, see nvim-lua/plenary.nvim#255
#       - uses: actions/checkout@v3

#       - name: Install neovim binary
#         uses: rhysd/action-setup-vim@v1
#         with:
#           neovim: true
#           version: v0.9.0

#       - name: Install LunarVim
#         timeout-minutes: 4
#         run: |
#           echo "$HOME/.local/bin" >> $GITHUB_PATH
#           pwsh.exe -NoLogo -ExecutionPolicy Bypass -NonInteractive -Command "./utils/installer/install.ps1 --local"
